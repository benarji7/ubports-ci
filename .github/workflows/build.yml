#=================================================
# Description: Build Ubports using GitHub Actions
# Lisence: MIT
# Author: Benarji7
# Credit: https://github.com/P3TERX/Actions-OpenWrt
#=================================================

name: Build Ubports

on: 
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          
      - name: Checkout
        uses: actions/checkout@master
        
      - name: Check free space
        run: |
          echo "Free space:"
          df -h  

      - name: Initialization environment
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          openjdk-8-jdk android-tools-adb bc bison \
          build-essential curl flex g++-multilib gcc-multilib gnupg gperf \
          imagemagick lib32ncurses-dev \
          lib32readline-dev lib32z1-dev  liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev \
          libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc yasm zip zlib1g-dev \
          qemu-user-static qemu-system-arm e2fsprogs simg2img \
          libtinfo5 libncurses5 gzip virtualenv
          sudo docker rmi `docker images -q`
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          mkdir -p ~/bin
          wget 'https://storage.googleapis.com/git-repo-downloads/repo' -P ~/bin
          chmod +x ~/bin/repo
          git config --global user.name "Benarji Anand"
          git config --global user.email "benarji385@gmail.com"
          source halium.env
          export FLASHABLE_DIR=Ubports-`date +%Y%m%d-%H%M%S`-$DEVICE
          echo $FLASHABLE_DIR > ~/.current_version
          echo "::set-env name=VENDOR::$(echo $VENDOR)"
          echo "::set-env name=DEVICE::$(echo $DEVICE)"
          echo "::set-env name=ANDROID_ROOT::$(echo $ANDROID_ROOT)"
          echo "::set-env name=FLASHABLE_DIR::$(echo $FLASHABLE_DIR)"

      - name: Downloading source code
        run: |
          source halium.env
          mkdir -p $ANDROID_ROOT
          cd $ANDROID_ROOT
          repo init -u https://github.com/Halium/android -b halium-9.0 --depth=1 --groups=all,-notdefault,-device,-linux,-x86,-arm64,-cortex-a53,kenzo
          repo sync -j8 -c --no-clone-bundle --no-tags

      - name: Clone device spec source
        run: |
          source halium.env
          git clone https://github.com/benarji7/device_xiaomi_kenzo.git -b halium-9.0 $ANDROID_ROOT/device/xiaomi/kenzo --depth=1
          git clone https://github.com/benarji7/device_xiaomi_msm8956-common.git -b halium-9.0 $ANDROID_ROOT/device/xiaomi/msm8956-common --depth=1
          git clone https://github.com/benarji7/proprietary_vendor_xiaomi.git -b halium-9.0 $ANDROID_ROOT/vendor/xiaomi --depth=1
          git clone https://github.com/benarji7/Escrima_kernel_xiaomi_msm8956.git -b halium-9.0 $ANDROID_ROOT/kernel/xiaomi/msm8956 --depth=1
          sudo rm -rf \
            $ANDROID_ROOT/hardware/qcom/display-caf/msm8952 \
            $ANDROID_ROOT/hardware/qcom/audio-caf/msm8952 \
            $ANDROID_ROOT/hardware/qcom/media-caf/msm8952
          git clone https://github.com/benarji7/android_hardware_qcom_display.git -b treble $ANDROID_ROOT/hardware/qcom/display-caf/msm8952
          git clone https://github.com/benarji7/android_hardware_qcom_audio.git -b treble $ANDROID_ROOT/hardware/qcom/audio-caf/msm8952
          git clone https://github.com/benarji7/android_hardware_qcom_media.git -b treble $ANDROID_ROOT/hardware/qcom/media-caf/msm8952

      - name: Check free space again
        run: |
          echo "Free space:"
          df -h  

      - name: Build HAL
        run: |
          chmod +x build-hal.sh
          bash -x build-hal.sh
        shell: bash

      - name: Build Package
        run: |
          chmod +x package.sh
          bash -x package.sh
        shell: bash


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MySecret }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MySecret }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/${{env.FLASHABLE_DIR}}.zip
          asset_name: ${{env.FLASHABLE_DIR}}.zip
          asset_content_type: application/zip        
